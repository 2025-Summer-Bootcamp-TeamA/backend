services:
  traefik:
    image: traefik:v2.9
    container_name: traefik
    command: 
      - "--api.insecure=false"
      - "--api.dashboard=true"
      - "--providers.docker=true"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.websecure.address=:443"
      - "--entrypoints.web.http.redirections.entrypoint.to=websecure"
      - "--entrypoints.web.http.redirections.entrypoint.scheme=https"
      - "--certificatesresolvers.letsencrypt.acme.tlschallenge=true"
      - "--certificatesresolvers.letsencrypt.acme.email=yuriswdev@gmail.com"
      - "--certificatesresolvers.letsencrypt.acme.storage=/letsencrypt/acme.json"
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - traefik-certificates:/letsencrypt
    labels:
      - "traefik.enable=true"
      # Traefik 대시보드 접근 (대시보드 주소: https://traefik.hiedu.site)
      - "traefik.http.routers.mydashboard.rule=Host(`traefik.hiedu.site`)"
      - "traefik.http.routers.mydashboard.entrypoints=websecure"
      - "traefik.http.routers.mydashboard.service=api@internal"
      - "traefik.http.routers.mydashboard.tls.certresolver=letsencrypt"
      # BasicAuth 인증 미들웨어 적용
      - "traefik.http.routers.mydashboard.middlewares=mydashboard-auth"
      - "traefik.http.middlewares.mydashboard-auth.basicauth.users=${TRAEFIK_DASHBOARD_USERS}"
    networks:
      - traefiknet

  backend:
    build:
      context: .
      dockerfile: Dockerfile
    restart: always
    env_file:
      - .env
    command: >
      bash -c "python manage.py migrate &&
      python manage.py runserver 0.0.0.0:8000"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.backend.rule=Host(`api.hiedu.site`) || Host(`hiedu.site`)"
      - "traefik.http.routers.backend.entrypoints=websecure"
      - "traefik.http.routers.backend.tls.certresolver=letsencrypt"
      - "traefik.http.services.backend.loadbalancer.server.port=8000"
      - "traefik.http.middlewares.backend-https-headers.headers.customrequestheaders.X-Forwarded-Proto=https"
      - "traefik.http.routers.backend.middlewares=backend-https-headers@docker"
    networks:
      - traefiknet

  celery:
    build: .
    command: celery -A config worker --loglevel=info
    depends_on:
      - rabbitmq
      - redis
    env_file:
      - .env
    volumes:
      - ./credentials:/app/credentials
    networks:
      - traefiknet

  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      - RABBITMQ_DEFAULT_USER=teama_user
      - RABBITMQ_DEFAULT_PASS=SecurePass123!
    networks:
      - traefiknet

  redis:
    image: redis:7
    container_name: redis
    ports:
      - "6379:6379"
    environment:
      - REDIS_PASSWORD=${REDIS_PASSWORD:-}
    networks:
      - traefiknet

  prometheus:
    image: prom/prometheus:v2.45.6
    container_name: prometheus
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.prometheus.rule=Host(`prometheus.hiedu.site`)"
      - "traefik.http.routers.prometheus.entrypoints=websecure"
      - "traefik.http.routers.prometheus.tls.certresolver=letsencrypt"
    networks:
      - traefiknet

  grafana:
    image: grafana/grafana:9.5.20
    container_name: grafana
    volumes:
      - ./grafana:/etc/grafana/provisioning
      - ./grafana/data:/var/lib/grafana
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.grafana.rule=Host(`grafana.hiedu.site`)"
      - "traefik.http.routers.grafana.entrypoints=websecure"
      - "traefik.http.routers.grafana.tls.certresolver=letsencrypt"
    networks:
      - traefiknet

volumes:
  traefik-certificates:

networks:
  traefiknet:
    driver: bridge
